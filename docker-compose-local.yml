services:
      
  user-service:
    restart: always
    build: ./user-service
    container_name: user-service
    volumes:
      - ./user-service:/app
    env_file:
      - .env
    environment:
      - ORM_USER_SERVICE=${ORM_USER_SERVICE}
      - TEST=$TEST
    ports:
      - 8001:8001
    links:
      - orm-user-service
    depends_on:
      - orm-user-service
      - redis

  orm-user-service:
    restart: always
    build:
      context: ./ORM-user-service
      dockerfile: Dockerfile
    container_name: orm-user-service
    volumes:
      - ./ORM-user-service:/app
    ports:
      - 8002:8002
    env_file:
      - .env
    environment:
      - DATABASE_HOST=${DATABASE_HOST}
      - USER_DATABASE_NAME=${USER_DATABASE_NAME}
      - DATABASE_USERNAME=${DATABASE_USERNAME}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_DATABASE=${REDIS_DATABASE}
    links:
      - mysql
    depends_on:
      - mysql

  symptom-service:
    restart: always
    build: ./symptom-service
    container_name: symptom-service
    volumes:
      - ./symptom-service:/app
    env_file:
      - .env
    environment:
      - ORM_SYMPTOM_SERVICE=${ORM_SYMPTOM_SERVICE}
      - TEST=$TEST
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_DATABASE=${REDIS_DATABASE}
    ports:
      - 8003:8003
    links:
      - orm-services
      - redis
    depends_on:
      - orm-services
      - redis
      
  orm-services:
    restart: always
    build:
      context: ./orm-services
      dockerfile: Dockerfile
    container_name: orm-services
    volumes:
      - ./orm-services:/app
    ports:
      - "8004:8004"
    env_file:
      - .env
    environment:
      - MONGODB_URL=${MONGODB_URL}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - SYMPTOM_DATABASE_NAME=${SYMPTOM_DATABASE_NAME}
    links:
      - mongodb
    depends_on:
      - mongodb

  community-service:
    restart: always
    build: ./community-service
    container_name: community-service
    volumes:
      - ./community-service:/app
    env_file:
      - .env
    environment:
      - ORM_METACOMMUNITY_SERVICE=${ORM_METACOMMUNITY_SERVICE}
      - ORM_MEMBER_SERVICE=${ORM_MEMBER_SERVICE}
      - ORM_POST_SERVICE=${ORM_POST_SERVICE}
      - ORM_COMMENT_SERVICE=${ORM_COMMENT_SERVICE}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_DATABASE=${REDIS_DATABASE}
    ports:
      - "8005:8005"
    links:
      - orm-services
      - redis
    depends_on:
      - orm-services
      - redis

  redis:
    image: redis:alpine
    command: redis-server --port 6379
    container_name: redis
    hostname: redis
    labels:
      - "name=redis"
      - "mode=standalone"
    ports:
      - 6379:6379

  mysql:
    container_name: mysql
    image: mysql:8.0.33
    volumes:
      - ./mysql-data:/var/lib/mysql
    environment: 
      MYSQL_ROOT_PASSWORD: default
      MYSQL_DATABASE: user

  # postgres:
  #   container_name: postgres
  #   image: postgres:16rc1
  #   volumes:
  #     - ./postgre-data:/var/lib/postgresql/data
  #   environment: 
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=postgres
  #   ports:
  #     - '5432:5432'

  mongodb:
    restart: always
    ports:
      - '27017:27017'
    container_name: mongodb
    logging:
      options:
        max-size: 1g
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    image: mongo  
    volumes:
      - ./mongodb:/data/db